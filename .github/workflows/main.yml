name: CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2 # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.16.5'

      - name: Go build for Windows
        env:
          GOOS: windows
          GOARCH: 386
        run: |
          go build -o rover-mems-windows.exe ./...

      - name: Go build for Linux
        env:
          GOOS: linux
          GOARCH: 386
        run: |
          go build -o rover-mems-linux ./...

      - name: Zip exes
        run: |
          zip -r rover-mems-windows.zip rover-mems-windows.exe
          zip -r rover-mems-linux.zip rover-mems-linux

#       - name: Keep artifacts if master branch
#         if: github.ref == 'refs/heads/master'
#         uses: actions/upload-artifact@v2
#         with:
#           name: rover-mems
#           path: |
#             rover-mems.zip

      - name: Create draft release if master branch
        if: github.ref == 'refs/heads/master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create arelease --title "Draft release" --draft --target "${GITHUB_SHA}" --notes "Draft release automatically made from successful master branch build" rover-mems-windows.zip rover-mems-linux.zip

# Usage:  gh release create <tag> [<files>...]
# Flags:
#   -d, --draft             Save the release as a draft instead of publishing it
#   -n, --notes string      Release notes
#   -F, --notes-file file   Read release notes from file
#   -p, --prerelease        Mark the release as a prerelease
#       --target branch     Target branch or full commit SHA (default: main branch)
#   -t, --title string      Release title
